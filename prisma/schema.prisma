// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  firstName String
  lastName  String
  company   String?
  role      Role     @default(USER)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  files        File[]
  transactions Transaction[]

  @@map("users")
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())

  @@map("contacts")
}

model File {
  id          String      @id @default(cuid())
  userId      String
  filename    String
  originalName String
  mime        String
  s3Key       String
  status      FileStatus  @default(PENDING)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  result      Json?

  // Relations
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@map("files")
}

model Transaction {
  id          String   @id @default(cuid())
  fileId      String
  userId      String
  date        DateTime
  description String
  vendor      String?
  amount      Float
  currency    String   @default("EUR")
  category    String?
  taxAmount   Float?
  meta        Json?

  // Relations
  file File @relation(fields: [fileId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

enum Role {
  ADMIN
  USER
}

enum FileStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}